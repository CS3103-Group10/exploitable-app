import { Router, Request, Response } from "express";

import { HttpStatusCode } from "../../utils";
import { getDb } from "../../services/database";
import { ApiError, ApiErrorMessage } from "../../errors";

const router: Router = Router();

// GET request - get all users
router.get("/", async (_: Request, res: Response) => {
  const { rows } = await getDb().query("SELECT * FROM Users;");

  return res.status(HttpStatusCode.OK).json(rows);
});

// POST request - user login (sql injectable)
router.post("/login", async (req: Request, res: Response) => {
  const uusername: string = req.body.uusername;
  const upassword: string = req.body.upassword;

  if (!uusername || !upassword) {
    throw new ApiError(
      HttpStatusCode.BAD_REQUEST,
      ApiErrorMessage.FloraLogin.MISSING_FIELDS
    );
  }

  const query =
    "SELECT uid, ucredits FROM Users where " +
    `uusername='${uusername}' and upassword='${upassword}'`;
  const { rows } = await getDb().query(query);
  const user = rows[0];

  if (!user) {
    throw new ApiError(
      HttpStatusCode.NOT_FOUND,
      ApiErrorMessage.FloraLogin.USER_NOT_FOUND
    );
  }

  return res.status(HttpStatusCode.OK).json(user);
});

// GET request - get a user's inventory
router.get("/:id/inventory", async (req: Request, res: Response) => {
  const uid: string = req.params.id;

  const { rows } = await getDb().query(
    "SELECT * FROM Inventory WHERE uid=$1;",
    [uid]
  );

  return res.status(HttpStatusCode.OK).json(rows);
});

export default router;
