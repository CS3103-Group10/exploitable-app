import { Router, Request, Response } from "express";

import { HttpStatusCode } from "../../utils";
import { getDb } from "../../services/database";

const router: Router = Router();

// GET request - get all users
router.get("/", async (_: Request, res: Response) => {
  const { rows } = await getDb().query("SELECT * FROM Users;");

  return res.status(HttpStatusCode.OK).json(rows);
});

// POST request - user login (sql injectable)
router.post("/login", async (req: Request, res: Response) => {
  const uusername: string = req.body.uusername;
  const upassword: string = req.body.upassword;
  if (uusername === undefined) {
    return res
      .status(HttpStatusCode.BAD_REQUEST)
      .json({ error: "No username field provided" });
  } else if (upassword === undefined) {
    return res
      .status(HttpStatusCode.BAD_REQUEST)
      .json({ error: "No password field provided" });
  }

  const query =
    "SELECT uid, ucredits FROM Users where " +
    `uusername='${uusername}' and upassword='${upassword}'`;
  const { rows } = await getDb().query(query);
  if (rows.length === 0) {
    return res
      .status(HttpStatusCode.NOT_FOUND)
      .json({ error: "User not found" });
  }

  return res.status(HttpStatusCode.OK).json(rows[0]);
});

// GET request - get user inventory
router.get("/inventory", async (req: Request, res: Response) => {
  const uid: string = req.body.uid;
  if (uid === undefined) {
    return res
      .status(HttpStatusCode.BAD_REQUEST)
      .json({ error: "No uid field provided" });
  }
  const { rows } = await getDb().query(
    "SELECT * FROM Inventory WHERE uid=$1;",
    [uid]
  );

  return res.status(HttpStatusCode.OK).json(rows);
});

export default router;
