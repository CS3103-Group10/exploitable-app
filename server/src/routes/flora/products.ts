import { Router, Request, Response } from "express";

import { HttpStatusCode } from "../../utils";
import { getDb } from "../../services/database";

const FLORA_KEY = "FLORA";
const router: Router = Router();

// GET request - get all products
router.get("/", async (_: Request, res: Response) => {
  const { rows } = await getDb().query("SELECT * FROM Products;");

  return res.status(HttpStatusCode.OK).json(rows);
});

// POST request - add product to a user
router.post("/purchase/successful", async (req: Request, res: Response) => {
  const { API_KEY, pid, uid } = req.body;
  if (API_KEY === undefined || API_KEY != FLORA_KEY) {
    return res
      .status(HttpStatusCode.FORBIDDEN)
      .json({ error: "Invalid API key" });
  } else if (pid === undefined) {
    return res
      .status(HttpStatusCode.BAD_REQUEST)
      .json({ error: "No pid field provided" });
  } else if (uid === undefined) {
    return res
      .status(HttpStatusCode.BAD_REQUEST)
      .json({ error: "No uid field provided" });
  }

  const { rows } = await getDb().query(
    "INSERT INTO Inventory values ($1, $2)",
    [uid, pid]
  );

  return res.status(HttpStatusCode.OK).send();
});

export default router;
