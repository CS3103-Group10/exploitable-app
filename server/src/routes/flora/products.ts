import { Router, Request, Response } from "express";

import { HttpStatusCode, FLORA_API_KEY } from "../../utils";
import { getDb } from "../../services/database";
import { ApiError, ApiErrorMessage } from "../../errors";

const router: Router = Router();

// GET request - get all products
router.get("/", async (_: Request, res: Response) => {
  const { rows } = await getDb().query("SELECT * FROM Products;");

  return res.status(HttpStatusCode.OK).json(rows);
});

// POST request - add a product to a user
router.post("/purchase/successful", async (req: Request, res: Response) => {
  const { API_KEY, pid, uid } = req.body;
  if (API_KEY !== FLORA_API_KEY) {
    throw new ApiError(
      HttpStatusCode.FORBIDDEN,
      ApiErrorMessage.FloraPurchase.INVALID_API_KEY
    );
  }

  if (!pid) {
    throw new ApiError(
      HttpStatusCode.BAD_REQUEST,
      ApiErrorMessage.FloraPurchase.INVALID_PID
    );
  }

  if (!uid) {
    throw new ApiError(
      HttpStatusCode.BAD_REQUEST,
      ApiErrorMessage.FloraPurchase.INVALID_UID
    );
  }

  await getDb().query("INSERT INTO Inventory values ($1, $2)", [uid, pid]);

  return res.status(HttpStatusCode.OK).send();
});

export default router;
