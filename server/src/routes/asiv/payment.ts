import { Router, Request, Response } from "express";

import { HttpStatusCode, FLORA_API_KEY, CLIENT_API_KEY } from "../../utils";
import axios from "axios";
import { ApiError, ApiErrorMessage } from "../../errors";

const router: Router = Router();

// POST request - generate payment url
router.post("/request", async (req: Request, res: Response) => {
  const { API_KEY, pid, uid } = req.body;
  if (API_KEY !== CLIENT_API_KEY) {
    throw new ApiError(
      HttpStatusCode.FORBIDDEN,
      ApiErrorMessage.AsivPayment.INVALID_API_KEY
    );
  }

  if (!pid) {
    throw new ApiError(
      HttpStatusCode.BAD_REQUEST,
      ApiErrorMessage.AsivPayment.INVALID_PID
    );
  }

  if (uid === undefined) {
    throw new ApiError(
      HttpStatusCode.BAD_REQUEST,
      ApiErrorMessage.AsivPayment.INVALID_UID
    );
  }

  return res.status(HttpStatusCode.OK).json({ redirect: "www.oof.com" });
});

// POST request - secure payment request
router.post("/successful", async (req: Request, res: Response) => {
  const { API_KEY, pid, uid } = req.body;
  const newReqBody: any = req.body;
  newReqBody.API_KEY = FLORA_API_KEY;

  await axios({
    method: "post",
    url: "http://localhost:8000/flora/api/products/purchase/successful",
    data: newReqBody,
  });

  return res.status(HttpStatusCode.OK).send();
});

export default router;
