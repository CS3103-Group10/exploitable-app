import { nanoid } from "nanoid";

import { AsivTransactionInfo, HttpStatusCode } from "../utils";
import { ApiError, ApiErrorMessage } from "../errors";

const tidToInfoMap: Map<string, AsivTransactionInfo> = new Map();

function addNewTransaction(info: AsivTransactionInfo): string {
  const secureTid: string = nanoid();
  const infoCopy: AsivTransactionInfo = { ...info };

  tidToInfoMap.set(secureTid, infoCopy);

  return secureTid;
}

function handlePayment(tid: string): void {
  const isExistingTransaction: boolean = tidToInfoMap.delete(tid);

  if (!isExistingTransaction) {
    throw new ApiError(
      HttpStatusCode.BAD_REQUEST,
      ApiErrorMessage.AsivPayment.TID_NOT_FOUND
    );
  }
}

function getTransactionInfo(tid: string): AsivTransactionInfo {
  const info: AsivTransactionInfo | undefined = tidToInfoMap.get(tid);
  if (info == null) {
    throw new ApiError(
      HttpStatusCode.BAD_REQUEST,
      ApiErrorMessage.AsivPayment.TID_NOT_FOUND
    );
  }

  return info;
}

export { addNewTransaction, handlePayment, getTransactionInfo };
