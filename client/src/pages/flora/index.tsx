import React, { useState, useEffect } from "react";
import Link from "next/link";
import {
  Typography,
  Table,
  Statistic,
  Card,
  Row,
  Space,
  Button,
  Divider,
} from "antd";

import { useAuth } from "src/hooks";
import {
  getFloraUserProducts,
  getFloraProducts,
  getAsivPaymentUrl,
  ASIV_API_KEY,
} from "src/utils";
import { Product } from "src/types";

const { Title } = Typography;

type ProductsTableData = Product & {
  key: number;
};

const tableColumns = [
  { title: "Product ID", dataIndex: "pid" },
  { title: "Product Name", dataIndex: "pname" },
  { title: "Product Cost", dataIndex: "pcost" },
];

const FloraIndexPage = (): JSX.Element => {
  const { isAuthenticated, token, user, products, setProducts } = useAuth();
  const [floraProductsTableData, setFloraProductsTableData] = useState<
    ProductsTableData[]
  >([]);
  const userProductsTableData: ProductsTableData[] = products
    ? products.map((product) => Object.assign({ key: product.pid }, product))
    : [];
  const [
    selectedProduct,
    setSelectedProduct,
  ] = useState<ProductsTableData | null>(null);

  useEffect(() => {
    (async () => {
      const floraProducts = await getFloraProducts();
      const floraProductsTableData = floraProducts.map((product) =>
        Object.assign({ key: product.pid }, product),
      );
      setFloraProductsTableData(floraProductsTableData);
    })();
  }, []);

  async function onRefreshClick() {
    if (!user || !token) {
      return;
    }
    const products = await getFloraUserProducts(user.uid, token);
    setProducts(products);
  }

  async function onBuyClick() {
    if (!user || !selectedProduct) {
      return;
    }
    const url: string = await getAsivPaymentUrl({
      API_KEY: ASIV_API_KEY,
      uid: user.uid,
      pid: selectedProduct.pid,
      pcost: selectedProduct.pcost,
    });
    // open link in new tab
    window.open(url, "_blank", "noopener,noreferrer");
  }

  return (
    <>
      <Title>Flora Shop</Title>
      <Card>
        {user ? (
          <>
            <Row justify="space-between" align="middle">
              <Space size="large">
                <Statistic
                  title="Products Owned"
                  value={userProductsTableData.length}
                />
                <Statistic title="Available Credits" value={user.ucredits} />
              </Space>
              <Button size="large" onClick={onRefreshClick} type="primary">
                Refresh
              </Button>
            </Row>

            <Table
              bordered
              size="small"
              dataSource={userProductsTableData}
              columns={tableColumns}
            ></Table>
          </>
        ) : (
          <Row justify="center">
            <Button type="primary">
              <Link href="/flora/login">Login to continue</Link>
            </Button>
          </Row>
        )}

        <Divider></Divider>

        <Row style={{ marginBottom: "12px" }} justify="end">
          <Button
            disabled={!isAuthenticated || !selectedProduct}
            onClick={onBuyClick}
            size="large"
            type="primary"
          >
            Buy product
          </Button>
        </Row>
        <Table
          rowSelection={{
            type: "radio",
            onSelect: (row) => setSelectedProduct(row),
          }}
          bordered
          size="small"
          dataSource={floraProductsTableData}
          columns={tableColumns}
        ></Table>
      </Card>
    </>
  );
};

export default FloraIndexPage;
